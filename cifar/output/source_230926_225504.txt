[23/09/26 22:55:04] [conf.py:  218]: PyTorch Version: torch=1.10.0, cuda=11.3, cudnn=8200
[23/09/26 22:55:04] [conf.py:  220]: BN:
  EPS: 1e-05
  MOM: 0.1
CKPT_DIR: ./ckpt
CORRUPTION:
  DATASET: cifar10
  NUM_EX: 10000
  SEVERITY: [5]
  TYPE: ['gaussian_noise', 'shot_noise', 'impulse_noise', 'defocus_blur', 'glass_blur', 'motion_blur', 'zoom_blur', 'snow', 'frost', 'fog', 'brightness', 'contrast', 'elastic_transform', 'pixelate', 'jpeg_compression']
CUDNN:
  BENCHMARK: True
DATA_DIR: ./data
DESC: 
LOG_DEST: source_230926_225504.txt
LOG_TIME: 230926_225504
MODEL:
  ADAPTATION: source
  ARCH: Standard
  EPISODIC: False
OPTIM:
  AP: 0.92
  BETA: 0.9
  DAMPENING: 0.0
  LR: 0.001
  METHOD: Adam
  MOMENTUM: 0.9
  MT: 0.999
  NESTEROV: True
  RST: 0.01
  STEPS: 1
  WD: 0.0
RNG_SEED: 1
SAVE_DIR: ./output
TEST:
  BATCH_SIZE: 200
[23/09/26 22:55:05] [cifar10c.py:   33]: test-time adaptation: NONE
[23/09/26 22:55:05] [cifar10c.py:   69]: model for evaluation: WideResNet(
  (conv1): Conv2d(input_channels=3, output_channels=16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (block1): NetworkBlock(
  (layer): Sequential(
  (0): BasicBlock(
  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=16, output_channels=160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=160, output_channels=160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (convShortcut): Conv2d(input_channels=16, output_channels=160, kernel_size=(1, 1), stride=(1, 1), padding=(0, 0), dilation=(1, 1), group=1, has_bias=False)
)
  (1): BasicBlock(
  (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=160, output_channels=160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=160, output_channels=160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
)
  (2): BasicBlock(
  (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=160, output_channels=160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=160, output_channels=160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
)
  (3): BasicBlock(
  (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=160, output_channels=160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=160, output_channels=160, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
)
)
)
  (block2): NetworkBlock(
  (layer): Sequential(
  (0): BasicBlock(
  (bn1): BatchNorm2d(160, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=160, output_channels=320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=320, output_channels=320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (convShortcut): Conv2d(input_channels=160, output_channels=320, kernel_size=(1, 1), stride=(2, 2), padding=(0, 0), dilation=(1, 1), group=1, has_bias=False)
)
  (1): BasicBlock(
  (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=320, output_channels=320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=320, output_channels=320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
)
  (2): BasicBlock(
  (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=320, output_channels=320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=320, output_channels=320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
)
  (3): BasicBlock(
  (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=320, output_channels=320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=320, output_channels=320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
)
)
)
  (block3): NetworkBlock(
  (layer): Sequential(
  (0): BasicBlock(
  (bn1): BatchNorm2d(320, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=320, output_channels=640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=640, output_channels=640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (convShortcut): Conv2d(input_channels=320, output_channels=640, kernel_size=(1, 1), stride=(2, 2), padding=(0, 0), dilation=(1, 1), group=1, has_bias=False)
)
  (1): BasicBlock(
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=640, output_channels=640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=640, output_channels=640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
)
  (2): BasicBlock(
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=640, output_channels=640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=640, output_channels=640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
)
  (3): BasicBlock(
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu1): ReLU(inplace=True)
  (conv1): Conv2d(input_channels=640, output_channels=640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
  (bn2): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu2): ReLU(inplace=True)
  (conv2): Conv2d(input_channels=640, output_channels=640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), dilation=(1, 1), group=1, has_bias=False)
)
)
)
  (bn1): BatchNorm2d(640, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (fc): Linear(in_features=640, out_features=10, bias=True)
)
[23/09/26 22:55:05] [cifar10c.py:   54]: not resetting model
